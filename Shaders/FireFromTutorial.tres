[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[ext_resource path="res://Game/Shaders/Images/Noise_glt_08.png" type="Texture" id=1]
[ext_resource path="res://Game/Shaders/Images/Noise_glt_02.png" type="Texture" id=2]

[sub_resource type="Shader" id=7]
code = "shader_type spatial;

uniform sampler2D albedo_texture; // Black and white texture
uniform sampler2D NOISE_PATTERN;
uniform sampler2D TONE_MAPPING;

uniform vec2 scroll = vec2(0.5, 0.5);
uniform vec2 scroll2 = vec2(0.5, 0.5);
uniform vec2 noiseScale1 = vec2(1.0, 1.0);
uniform vec2 noiseScale2 = vec2(1.0, 1.0);
uniform float base_intensity: hint_range(0, 0.5) = 0.1;
uniform float transparency: hint_range(0, 1) = 0.5;
uniform vec4 emission_color: hint_color = vec4(1.0, 1.0, 1.0, 1.0); // Emission color and intensity


void fragment() {
    vec2 uv = UV + TIME * scroll; // Calculate scrolling UV coordinates
    uv = fract(uv); // Ensure UV coordinates are wrapped

    // Sample the black and white texture
    // Sample the black and white texture
    float tex_value = texture(albedo_texture, uv).r;

    // Calculate pattern intensities
    float pattern_intensity = texture(NOISE_PATTERN, uv * noiseScale1 + TIME * scroll).r;
    float pattern_intensity2 = texture(NOISE_PATTERN, uv * noiseScale2 + TIME * scroll2).r;
    float intensity = tex_value * pattern_intensity * pattern_intensity2 + base_intensity;

    // Sample the tone mapping texture based on calculated intensity
    vec4 tone_color = texture(TONE_MAPPING, vec2(intensity, 0.5));

    // Set the final color and alpha
    ALBEDO = tone_color.rgb;  // Set the color
    ALPHA = tex_value * transparency; // Set the alpha based on the texture value
	EMISSION = emission_color.rgb * tex_value; // Apply emission color and intensity
}
"

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0, 0.108808, 0.751295 )
colors = PoolColorArray( 1, 0.0235294, 0.0235294, 1, 1, 0.128264, 0.0216702, 0.967774, 1, 0.686275, 0.0117647, 0.741176 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )
width = 1024

[resource]
render_priority = 2
shader = SubResource( 7 )
shader_param/scroll = Vector2( 0.5, 1 )
shader_param/scroll2 = Vector2( 0.5, 0.5 )
shader_param/noiseScale1 = Vector2( 1, 1 )
shader_param/noiseScale2 = Vector2( 1, 1 )
shader_param/base_intensity = 0.126
shader_param/transparency = 0.5
shader_param/emission_color = Color( 1, 1, 1, 1 )
shader_param/albedo_texture = ExtResource( 1 )
shader_param/NOISE_PATTERN = ExtResource( 2 )
shader_param/TONE_MAPPING = SubResource( 9 )
