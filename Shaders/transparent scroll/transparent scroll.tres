[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://Shaders/imgs/Noise_WHM_0001_a.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.3, 1, 0.015 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=4]
default_input_values = [ 0, 0.0, 1, 2.0, 2, 2.0 ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=5]
output_port_for_preview = 1

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "time"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible, unshaded;

uniform sampler2D tex_frg_11;
uniform sampler2D tex_frg_13;



void vertex() {
// Output:0

}

void fragment() {
// Input:9
	float n_out9p0 = TIME;

// ScalarOp:14
	float n_in14p0 = 0.30000;
	float n_out14p0 = n_in14p0 * n_out9p0;

// Input:10
	vec3 n_out10p0 = vec3(UV, 0.0);

// VectorDecompose:5
	float n_out5p0 = n_out10p0.x;
	float n_out5p1 = n_out10p0.y;
	float n_out5p2 = n_out10p0.z;

// VectorCompose:3
	vec3 n_out3p0 = vec3(n_out14p0, dot(n_out10p0, vec3(0.333333, 0.333333, 0.333333)), n_out5p1);

// Texture:11
	vec4 tex_frg_11_read = texture(tex_frg_11, n_out3p0.xy);
	vec3 n_out11p0 = tex_frg_11_read.rgb;
	float n_out11p1 = tex_frg_11_read.a;

// Input:12
	float n_out12p0 = TIME;

// Texture:13
	vec4 tex_frg_13_read = textureLod(tex_frg_13, vec3(n_out12p0).xy, n_out12p0);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// Output:0
	ALBEDO = n_out11p0;
	ALPHA = dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333));

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1108.91, 77.4124 )
flags/unshaded = true
nodes/fragment/0/position = Vector2( 520, 200 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -140, 280 )
nodes/fragment/5/node = SubResource( 5 )
nodes/fragment/5/position = Vector2( -580, 380 )
nodes/fragment/9/node = SubResource( 6 )
nodes/fragment/9/position = Vector2( -700, 180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -880, 300 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 120, 180 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -160, 520 )
nodes/fragment/13/node = SubResource( 7 )
nodes/fragment/13/position = Vector2( 140, 400 )
nodes/fragment/14/node = SubResource( 8 )
nodes/fragment/14/position = Vector2( -440, 200 )
nodes/fragment/connections = PoolIntArray( 10, 0, 5, 0, 13, 0, 0, 1, 9, 0, 14, 1, 12, 0, 13, 1, 10, 0, 3, 1, 14, 0, 3, 0, 12, 0, 13, 0, 5, 1, 3, 2, 11, 0, 0, 0, 3, 0, 11, 0 )
